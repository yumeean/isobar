{"ast":null,"code":"var _jsxFileName = \"/Users/ian/vscode-workspace/isobar/isobar/src/App.js\";\nimport './App.css';\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const Isobar = _ref => {\n    _s();\n\n    let {\n      colorTable,\n      lowLabel,\n      highLabel,\n      titleLabel\n    } = _ref;\n    let ref = useRef();\n    useEffect(() => {\n      let newArr = colorTable.sort((a, b) => b[0] - a[0]);\n      let canvas = ref.current;\n      let ctx = canvas.getContext(\"2d\");\n      canvas.style.width = \"100%\";\n      canvas.style.height = \"100%\";\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      let grd = ctx.createLinearGradient(0, 0, 0, window.innerHeight);\n\n      for (let i of newArr) {\n        grd.addColorStop(i[0] / 100, `rgba(${i[1]},${i[2]},${i[3]})`);\n      }\n\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    }, [colorTable]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isobar-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isobar-labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: highLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: titleLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: lowLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Isobar, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ian/vscode-workspace/isobar/isobar/src/App.js"],"names":["React","useEffect","useRef","App","Isobar","colorTable","lowLabel","highLabel","titleLabel","ref","newArr","sort","a","b","canvas","current","ctx","getContext","style","width","height","offsetWidth","offsetHeight","grd","createLinearGradient","window","innerHeight","i","addColorStop","fillStyle","fillRect","innerWidth"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAG,QAAqD;AAAA;;AAAA,QAApD;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,QAAd;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA;AAAnC,KAAoD;AAClE,QAAIC,GAAG,GAAGP,MAAM,EAAhB;AAEAD,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIS,MAAM,GAAGL,UAAU,CAACM,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAlC,CAAb;AACA,UAAIE,MAAM,GAAGL,GAAG,CAACM,OAAjB;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAV;AACAH,MAAAA,MAAM,CAACI,KAAP,CAAaC,KAAb,GAAqB,MAArB;AACAL,MAAAA,MAAM,CAACI,KAAP,CAAaE,MAAb,GAAsB,MAAtB;AACAN,MAAAA,MAAM,CAACK,KAAP,GAAeL,MAAM,CAACO,WAAtB;AACAP,MAAAA,MAAM,CAACM,MAAP,GAAgBN,MAAM,CAACQ,YAAvB;AACA,UAAIC,GAAG,GAAGP,GAAG,CAACQ,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkCC,MAAM,CAACC,WAAzC,CAAV;;AACA,WAAK,IAAIC,CAAT,IAAcjB,MAAd,EAAsB;AACpBa,QAAAA,GAAG,CAACK,YAAJ,CAAiBD,CAAC,CAAC,CAAD,CAAD,GAAO,GAAxB,EAA8B,QAAOA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,GAA1D;AACD;;AACDX,MAAAA,GAAG,CAACa,SAAJ,GAAgBN,GAAhB;AACAP,MAAAA,GAAG,CAACc,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBL,MAAM,CAACM,UAA1B,EAAsCN,MAAM,CAACC,WAA7C;AACD,KAdQ,EAcN,CAACrB,UAAD,CAdM,CAAT;AAgBA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAQ,QAAA,GAAG,EAAEI;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GA7BD;;AADa,KACPF,MADO;AA+Bd;;KA/BQD,G;AAiCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useEffect, useRef} from 'react';\n\nfunction App() {\n  const Isobar = ({ colorTable, lowLabel, highLabel, titleLabel }) => {\n    let ref = useRef();\n  \n    useEffect(() => {\n      let newArr = colorTable.sort((a, b) => b[0] - a[0]);\n      let canvas = ref.current;\n      let ctx = canvas.getContext(\"2d\");\n      canvas.style.width = \"100%\";\n      canvas.style.height = \"100%\";\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      let grd = ctx.createLinearGradient(0, 0, 0, window.innerHeight);\n      for (let i of newArr) {\n        grd.addColorStop(i[0] / 100, `rgba(${i[1]},${i[2]},${i[3]})`);\n      }\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    }, [colorTable]);\n  \n    return (\n      <div className=\"isobar-wrapper\">\n        <canvas ref={ref} />\n        <div className=\"isobar-labels\">\n          <div>{highLabel}</div>\n          <div>{titleLabel}</div>\n          <div>{lowLabel}</div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}